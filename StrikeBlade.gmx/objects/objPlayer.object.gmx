<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprIdleRightRed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facing = Direction.right;
runSpeed = 13;
jumpSpeed = -20;
swordThrowSpeed = 20;
numJumps = 2;
image_speed = 1/3;
armourSlots = map(
    ArmourSlots.head,  noone,
    ArmourSlots.chest, noone,
    ArmourSlots.hands, noone,
    ArmourSlots.legs,  noone,
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isPressedNoConflict(KEYS.d) &amp;&amp; place_free(x + (sprite_width / 2) + 1, y))
{
    facing = Direction.right;
    x += runSpeed;
}

if (isPressedNoConflict(KEYS.a) &amp;&amp; place_free(x - (sprite_width / 2) - 1, y))
{
    facing = Direction.left;
    x -= runSpeed;
}

if (isPressed(KEYS.w) &amp;&amp; !place_free(x, y + 1))
{
    y += jumpSpeed;
    vspeed = jumpSpeed;
}

if (place_free(x, y + 1))
{
    friction = 0;
    gravity = 2;
    gravity_direction = 270;
}
else
{
    gravity = 0;
    friction = 4;
}

if (facing == Direction.right)
{
    if (isPressed(dirToKey(facing)) &amp;&amp; !place_free(x, y + 1))
    {
        sprite_index = sprPlayerRunRight_old;
    }
    else
    {
        sprite_index = sprPlayerIdleRight_old;
    }
}
else if (facing == Direction.left)
{
    if (isPressed(dirToKey(facing)) &amp;&amp; !place_free(x, y + 1))
    {
        sprite_index = sprPlayerRunLeft_old;
    }
    else
    {
        sprite_index = sprPlayerIdleLeft_old;
    }
}
else
{
    assert(false, "Unexpected value for 'facing': ", facing);
}

if (mouse_check_button_released(mb_right))
{
    if (instance_exists(objSword))
    {
        x = objSword.x;
        y = objSword.y + (sprite_height / 2);
        hspeed = objSword.hspeed;
        with (objSword)
        {
            instance_destroy();
        }
    }
    else
    {
        var swordStartX = x + getDirSign(facing) * (runSpeed + swordThrowSpeed);
        var sword = instance_create(swordStartX, y - (sprite_height / 2), objSword);
        sword.facing = facing;
        setSpriteFromFacing(sword, sprSwordRight, sprSwordLeft);
        sword.hspeed = getDirSign(facing) * swordThrowSpeed;
        sword.image_angle = getDirSign(facing) * -90;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objArmourPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlatform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction, vspeed * -sign(direction));
vspeed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

/*var oldColour = draw_get_colour();
draw_set_colour(c_red);
draw_rectangle(x - sprite_get_bbox_left(sprite_index),
               y - sprite_get_bbox_bottom(sprite_index),
               x + sprite_get_bbox_right(sprite_index),
               y + sprite_get_bbox_top(sprite_index),
               true);
draw_set_colour(oldColour);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>10,44</point>
    <point>22,22</point>
  </PhysicsShapePoints>
</object>
