<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enum Direction
{
    left,
    right,
}

enum ArmourSlots
{
    head,
    chest,
    legs,
    hands,
    feet,
}

enum Animations
{
    idle,
    run,
    invisible,
}

enum PlayerAlarms
{
    invincibility = 0,
    blink = 1,
    restoreMovement = 2,
}

enum BotSpawnerAlarms
{
    spawn = 0,
}

enum ShockBotAlarms
{
    bounce = 0,
    cooldown = 1,
}

enum AttackDroneAlarms
{
    laser = 0,
}

enum BossShipAlarms
{
    laser = 0,
    droneRefresh = 1,
    laserDuration = 2,
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Wall Laser Beam Directions
enum LaserDirection
{
    up,
    down,
    left,
    right,
}

// States For Bad-Guys
enum ShockBotStates
{
    attacking,
    patrolling,
    bouncingBack,
    coolingDown,
    exploding,
}

// Ranged bot states
enum RangedBotStates
{
    flyingToHero,
    attacking,
    coolingDown,
    exploding,
}

// Heavy Ranged bot states
enum HeavyRangedBotStates
{
    flyingToHero,
    attacking,
    coolingDown,
    exploding,
}

// Boss Ship States
enum BossShipStates
{
    spawnDrones,
    attacking,
    recovery,
    exploding,
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
