<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHeavyAttackDrone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited();

hp = 1;

damage = 1;

pointsValue = 200;

blastersCreated = false;

// Create the heavy blasters
var blaster1, blaster2;

blaster1Destroyed = false;
blaster2Destroyed = false;

runSpeed = 8;

range = 400;

currentState = RangedBotStates.flyingToHero;

droneMinHeight = room_height - 400;
droneMaxHeight = room_height - 700;
droneCurrentHeight = droneMaxHeight;
 
coolDownTime = seconds(3);

image_speed = 1/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Leaving Attacking state
currentState = HeavyRangedBotStates.flyingToHero;

if(droneCurrentHeight == droneMaxHeight) {
    droneCurrentHeight = droneMinHeight;
} 
else {
    droneCurrentHeight = droneMaxHeight;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!blastersCreated) {
    blaster1 = instance_create(x, y - 112, objHeavyDroneBlaster);
    blaster2 = instance_create(x, y + 108, objHeavyDroneBlaster);
    
    blastersCreated = true;
}
else {
    // If the blasters are created align them
     if(instance_exists(blaster1)) {
        blaster1.x = x - 112;
        blaster1.y = y;
     }
     else {
        blaster1Destroyed = true;
        effect_create_above(ef_smoke, x - 112, y, 0, c_black);
     }
     
     if(instance_exists(blaster2)) {
        blaster2.x = x + 108;
        blaster2.y = y;
     }
     else {
        blaster2Destroyed = true;
        effect_create_above(ef_smoke, x + 108, y, 0, c_black);
     }
     
     
     

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check for certain dealth
if(blaster1Destroyed &amp;&amp; blaster2Destroyed &amp;&amp; hp &lt; 1) {
        currentState = HeavyRangedBotStates.exploding;
}

// Check if bot is high enough
if(abs(y - droneCurrentHeight) &gt; runSpeed * 2) {
    if(y - droneCurrentHeight &gt; 0) {
        y -= runSpeed;
    }
    else {
        y += runSpeed;
    }
}
    
// Check if Hero is on left or right
//image_angle = point_direction(x, y, objPlayer.x, objPlayer.y);

switch(currentState) {
    case HeavyRangedBotStates.flyingToHero:
        sprite_index = sprHeavyAttackDrone;
        if(distance_to_object(objPlayer) &gt; range &amp;&amp; (abs(x - objPlayer.x) &gt; runSpeed * 2)) {
           move_towards_point(objPlayer.x, y, runSpeed);
           
        }
        else {
            currentState = HeavyRangedBotStates.attacking;
        }
    break;
    
    case HeavyRangedBotStates.attacking:
        // Shoot Laser
        instance_create(x, y, objBotBomb);
        alarm[AttackDroneAlarms.laser] = coolDownTime; // Cool down
        currentState = HeavyRangedBotStates.coolingDown;
    break;
        
    case HeavyRangedBotStates.coolingDown:
       // sprite_index = sprAttackDroneCooling;
        sprite_index = sprHeavyAttackDroneBomb;
        speed = 0;
    break;
        
    case HeavyRangedBotStates.exploding:
        // Create Explosion
        audio_play_sound(sndExplosion1, 10, false);
        effect_create_above(ef_explosion, x, y, 1, c_blue);
        effect_create_above(ef_firework, x, y, 1, c_yellow);
        var scorePopUp = instance_create(x, y, objScore);
        scorePopUp.pointsValue = pointsValue;
        
        spawnChance = random(10);

        if(spawnChance &lt; 1) {
             instance_create(x, y, objArmourPickup);
        }
        
        instance_destroy();
    break; 
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBotDeflectedLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!blaster1Destroyed) {
    blaster1.hp--;
}
else if(!blaster2Destroyed) {
    blaster2.hp--;
}
else if(blaster1Destroyed &amp;&amp; blaster2Destroyed) {
    hp--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objSword">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(blaster1Destroyed &amp;&amp; blaster2Destroyed) {
    hp--;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>532</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_effect</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>13</kind>
            <string>8454143</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,32</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
