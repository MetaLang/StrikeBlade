<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprShipBossAttack</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objPlatform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

hp = 5;

damage = 1;

pointsValue = 200;

runSpeed = 5;

range = 20000;

currentState = BossShipStates.attacking;


laserRefreshed = true;
bombRefreshed = true;
spanDronesRefreshed = true;
inRecovery = false;

bombRefreshTime = seconds(3);
droneRefreshTime = seconds(5);
recoveryTime = seconds(4);


spawnedDrones = 0;
maxDrones = 6;


instance_create(x-200, y-250, objBossHeart);
instance_create(x-100, y-250, objBossHeart);
instance_create(x, y-250, objBossHeart);
instance_create(x+100, y-250, objBossHeart);
instance_create(x+200, y-250, objBossHeart);


//image_speed = 1/3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-runSpeed</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y -= 200;
objBossHeart.y -= 200; 

visible = true;
solid = true;
objBossHeart.visible = true;

inRecovery = false;
hspeed = runSpeed;

if (spawnedDrones &lt; maxDrones) { 
    spanDronesRefreshed = true;
    currentState = BossShipStates.spawnDrones;
}
else {
    laserRefreshed = true;
    bombRefreshed = true;
    currentState = BossShipStates.attacking;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Refresh drones
if(spawnedDrones != maxDrones) {
    instance_create(x+128, y+64, objAttackDrone);
    instance_create(x-128, y+64, objAttackDrone);
    spawnedDrones += 2;
    alarm[BossShipAlarms.droneRefresh] = droneRefreshTime;
    laserRefreshed = false;
    bombRefreshed = false;
    
    with(objLaserBeamMessenger) {
        instance_destroy();
    }
    
    with(objLaserBeam) {
        instance_destroy();
    }
    
}
else {
    spawnedDrones = 0;
    hspeed = runSpeed;
    laserRefreshed = true;
    bombRefreshed = true;
    currentState = BossShipStates.attacking;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Leaving Attacking state
bombRefreshed = true;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check for certain dealth
if(hp &lt; 1) {
    currentState = BossShipStates.exploding;
}

    
// Check if Hero is on left or right
//image_angle = point_direction(x, y, objPlayer.x, objPlayer.y);

switch(currentState) {
    case BossShipStates.attacking:

        // Check if bot is ready to attack
        if(laserRefreshed) { // Beam Laser
            instance_create(x, y+50, objLaserBeam);
            laserRefreshed = false;
        }
        
        if(bombRefreshed) { // Drop Bomb
            if(place_free(x - (100 * hspeed),y + 100)) {
                instance_create(x - (100 * hspeed), y + 100, objBossBomb);
                alarm[0] = bombRefreshTime;
                bombRefreshed = false;
            }
        }

    break;
        
    case BossShipStates.spawnDrones:
    // Summon Drones
        // sprite_index = sprHeavyAttackDroneBomb;
        if(spawnedDrones &lt; 2) {
           
            instance_create(x+128, y+64, objAttackDrone);
            instance_create(x-128, y+64, objAttackDrone);
            spawnedDrones += 2;
            alarm[BossShipAlarms.droneRefresh] = droneRefreshTime;
        }

            laserRefreshed = false;
            bombRefreshed = false;
            
            with(objLaserBeamMessenger) {
                instance_destroy();
            }
            
            with(objLaserBeam) {
                instance_destroy();
            }
        
        
        
    break;
    
    case BossShipStates.recovery:
    
        if(!inRecovery) {
             alarm[4] = recoveryTime; 
             
            
            visible = false;
            solid = false;
            objBossHeart.visible = false;
            objBossHeart.solid = false;
        
             inRecovery = true;
             
             if(hspeed != 0) {
                runSpeed = hspeed;
                hspeed = 0;
             }
             
        }
        
        laserRefreshed = false;
        bombRefreshed = false;
    
        
         with(objLaserBeamMessenger) {
                instance_destroy();
            }
            
            with(objLaserBeam) {
                instance_destroy();
            }

    break; 
        
    case BossShipStates.exploding:
        // Create Explosion
        effect_create_above(ef_explosion, x, y, 1, c_blue);
        effect_create_above(ef_firework, x, y, 1, c_yellow);
        var scorePopUp = instance_create(x, y, objScore);
        scorePopUp.pointsValue = pointsValue;
        with(objLaserBeamMessenger) {
            instance_destroy();
        }
        
        with(objLaserBeam) {
            instance_destroy();
        }

        instance_destroy();
    break; 
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlatform">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>runSpeed = hspeed;
currentState = BossShipStates.spawnDrones;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,32</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
